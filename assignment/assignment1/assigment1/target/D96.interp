token literal names:
null
'main'
'int'
'void'
null
null
'Break'
'Continue'
'If'
'Elseif'
'Else'
'Foreach'
'True'
'False'
'Array'
'In'
'Int'
'Float'
'Boolean'
'String'
'Return'
'Null'
'Class'
'Val'
'Var'
'Constructor'
'Destructor'
'New'
'By'
'('
')'
'['
']'
'.'
','
';'
'{'
'}'
null
null
null
null
null
null
null
null
null
null
null

token symbolic names:
null
null
INTTYPE
VOIDTYPE
WHITE_SPACE
COMMENT
BREAK
CONTINUE
IF
ELSE_IF
ELSE
FOR_EACH
TRUE
FALSE
ARRAY
IN
INT
FLOAT
BOOLEAN
STRING
RETURN
NULL
CLASS
VAL
VAR
CONSTRUCTOR
DESTRUCTOR
NEW
BY
LEFT_PAREN
RIGHT_PAREN
LEFT_SQUARE_BRACKET
RIGHT_SQUARE_BRACKET
DOT
COMMA
SEMICOLON
LEFT_CURLY_BRACKET
RIGHT_CURLY_BRACKET
ESCAPE
INTEGER
OCTAL_LITERALNESS
HEXA_LITERALNESS
BINARY_LITERALNESS
FLOAT_LITERALNESS
BOOLEAN_LITERALNESS
STRING_LITERALNESS
ERROR_CHAR
UNCLOSE_STRING
ILLEGAL_ESCAPE

rule names:
program
mptype
body
exp
funcall


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 50, 37, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 5, 2, 19, 10, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 5, 6, 33, 10, 6, 3, 6, 3, 6, 3, 6, 2, 2, 7, 2, 4, 6, 8, 10, 2, 3, 3, 2, 4, 5, 2, 33, 2, 12, 3, 2, 2, 2, 4, 23, 3, 2, 2, 2, 6, 25, 3, 2, 2, 2, 8, 28, 3, 2, 2, 2, 10, 30, 3, 2, 2, 2, 12, 13, 5, 4, 3, 2, 13, 14, 7, 3, 2, 2, 14, 15, 7, 31, 2, 2, 15, 16, 7, 32, 2, 2, 16, 18, 7, 38, 2, 2, 17, 19, 5, 6, 4, 2, 18, 17, 3, 2, 2, 2, 18, 19, 3, 2, 2, 2, 19, 20, 3, 2, 2, 2, 20, 21, 7, 39, 2, 2, 21, 22, 7, 2, 2, 3, 22, 3, 3, 2, 2, 2, 23, 24, 9, 2, 2, 2, 24, 5, 3, 2, 2, 2, 25, 26, 5, 10, 6, 2, 26, 27, 7, 37, 2, 2, 27, 7, 3, 2, 2, 2, 28, 29, 5, 10, 6, 2, 29, 9, 3, 2, 2, 2, 30, 32, 7, 31, 2, 2, 31, 33, 5, 8, 5, 2, 32, 31, 3, 2, 2, 2, 32, 33, 3, 2, 2, 2, 33, 34, 3, 2, 2, 2, 34, 35, 7, 32, 2, 2, 35, 11, 3, 2, 2, 2, 4, 18, 32]